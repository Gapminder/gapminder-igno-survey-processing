[tool.poetry]
name = "gapminder-igno-survey-processing-gsheets-workflow-api"
version = "0.1.0"
description = "Secured API endpoints that enables the Google Spreadsheet survey automation workflows"
authors = ["Gapminder Foundation <info@gapminder.org>"]
readme = "README.md"
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
]
packages = [{ include = "lib" }]

[tool.poetry.dependencies]
python = ">=3.9,<3.10"
pandas = "^1.3.4"
mypy = "^0.991"
unidecode = "^1.3.6"
pydantic = "^1.10.4"

# to simplify development and deployment of cloud functions
functions-framework = "^3.0.0"
python-dotenv = "^0.20.0"

# for gsheets import/export
gspread = "^5.1.1"
gspread-dataframe = {git = "https://github.com/robin900/gspread-dataframe.git#main"}

# for gdrive API consumption
google-auth = "^2.6.6"
google-api-python-client = "^2.45.0"

# typehints
types-requests = "^2.28.11.6"

# for logging that supports {variables} in brace format
bracelogger = "^1.1.0"

# unsorted (new deps gets listed here)

[tool.poetry.dev-dependencies]
coverage = "^6.3.2"
freezegun = "^1.2.1"
poethepoet = "^0.13.1"
pre-commit = "^2.18.1"
pytest = "^7.2.0"
pytest-cov = "^3.0.0"
jupyter = "^1.0.0"
ipykernel = "^6.6.0"
jupytext = "^1.14.4"
pytest-mock = "^3.6.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
test = ["pytest", "lint"]
pytest = "pytest --cov=lib --verbose tests/"
lint = "pre-commit run --all-files"
install_kernel = "python -m ipykernel install --user --name gapminder-igno-survey-processing-gsheets-workflow-api"
deploy = ["export_requirements", "deploy_gcp"]
export_requirements = { shell = "poetry export --without-hashes --format=requirements.txt | grep -v '@ file://' > requirements.txt" }
deploy_gcp = { shell = """
echo Deploying GCP Cloud Functions in project $GCP_PROJECT
gcloud functions deploy "refresh_surveys_and_combined_listings" --memory 4gb --runtime python39 --set-secrets "SURVEY_MONKEY_API_TOKEN=survey-monkey-api-token:latest" --trigger-http --project=$GCP_PROJECT --region=$GCP_REGION --verbosity=info --timeout=540
""" }
logs = "gcloud functions logs read \"refresh_surveys_and_combined_listings\" --project $GCP_PROJECT --region $GCP_REGION"

[tool.poe]
envfile = ".env"
